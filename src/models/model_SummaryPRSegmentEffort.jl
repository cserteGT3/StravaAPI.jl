# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""SummaryPRSegmentEffort

    SummaryPRSegmentEffort(;
        pr_activity_id=nothing,
        pr_elapsed_time=nothing,
        pr_date=nothing,
        effort_count=nothing,
    )

    - pr_activity_id::Int64 : The unique identifier of the activity related to the PR effort.
    - pr_elapsed_time::Int64 : The elapsed time ot the PR effort.
    - pr_date::ZonedDateTime : The time at which the PR effort was started.
    - effort_count::Int64 : Number of efforts by the authenticated athlete on this segment.
"""
Base.@kwdef mutable struct SummaryPRSegmentEffort <: OpenAPI.APIModel
    pr_activity_id::Union{Nothing, Int64} = nothing
    pr_elapsed_time::Union{Nothing, Int64} = nothing
    pr_date::Union{Nothing, ZonedDateTime} = nothing
    effort_count::Union{Nothing, Int64} = nothing

    function SummaryPRSegmentEffort(pr_activity_id, pr_elapsed_time, pr_date, effort_count, )
        OpenAPI.validate_property(SummaryPRSegmentEffort, Symbol("pr_activity_id"), pr_activity_id)
        OpenAPI.validate_property(SummaryPRSegmentEffort, Symbol("pr_elapsed_time"), pr_elapsed_time)
        OpenAPI.validate_property(SummaryPRSegmentEffort, Symbol("pr_date"), pr_date)
        OpenAPI.validate_property(SummaryPRSegmentEffort, Symbol("effort_count"), effort_count)
        return new(pr_activity_id, pr_elapsed_time, pr_date, effort_count, )
    end
end # type SummaryPRSegmentEffort

const _property_types_SummaryPRSegmentEffort = Dict{Symbol,String}(Symbol("pr_activity_id")=>"Int64", Symbol("pr_elapsed_time")=>"Int64", Symbol("pr_date")=>"ZonedDateTime", Symbol("effort_count")=>"Int64", )
OpenAPI.property_type(::Type{ SummaryPRSegmentEffort }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_SummaryPRSegmentEffort[name]))}

function check_required(o::SummaryPRSegmentEffort)
    true
end

function OpenAPI.validate_property(::Type{ SummaryPRSegmentEffort }, name::Symbol, val)
    if name === Symbol("pr_activity_id")
        OpenAPI.validate_param(name, "SummaryPRSegmentEffort", :format, val, "int64")
    end
    if name === Symbol("pr_date")
        OpenAPI.validate_param(name, "SummaryPRSegmentEffort", :format, val, "date-time")
    end
end
