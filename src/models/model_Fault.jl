# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Fault
Encapsulates the errors that may be returned from the API.

    Fault(;
        errors=nothing,
        message=nothing,
    )

    - errors::Vector{Error} : The set of specific errors associated with this fault, if any.
    - message::String : The message of the fault.
"""
Base.@kwdef mutable struct Fault <: OpenAPI.APIModel
    errors::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{Error} }
    message::Union{Nothing, String} = nothing

    function Fault(errors, message, )
        OpenAPI.validate_property(Fault, Symbol("errors"), errors)
        OpenAPI.validate_property(Fault, Symbol("message"), message)
        return new(errors, message, )
    end
end # type Fault

const _property_types_Fault = Dict{Symbol,String}(Symbol("errors")=>"Vector{Error}", Symbol("message")=>"String", )
OpenAPI.property_type(::Type{ Fault }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_Fault[name]))}

function check_required(o::Fault)
    true
end

function OpenAPI.validate_property(::Type{ Fault }, name::Symbol, val)
end
