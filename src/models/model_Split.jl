# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Split

    Split(;
        average_speed=nothing,
        distance=nothing,
        elapsed_time=nothing,
        elevation_difference=nothing,
        pace_zone=nothing,
        moving_time=nothing,
        split=nothing,
    )

    - average_speed::Float32 : The average speed of this split, in meters per second
    - distance::Float32 : The distance of this split, in meters
    - elapsed_time::Int64 : The elapsed time of this split, in seconds
    - elevation_difference::Float32 : The elevation difference of this split, in meters
    - pace_zone::Int64 : The pacing zone of this split
    - moving_time::Int64 : The moving time of this split, in seconds
    - split::Int64 : N/A
"""
Base.@kwdef mutable struct Split <: OpenAPI.APIModel
    average_speed::Union{Nothing, Float32} = nothing
    distance::Union{Nothing, Float32} = nothing
    elapsed_time::Union{Nothing, Int64} = nothing
    elevation_difference::Union{Nothing, Float32} = nothing
    pace_zone::Union{Nothing, Int64} = nothing
    moving_time::Union{Nothing, Int64} = nothing
    split::Union{Nothing, Int64} = nothing

    function Split(average_speed, distance, elapsed_time, elevation_difference, pace_zone, moving_time, split, )
        OpenAPI.validate_property(Split, Symbol("average_speed"), average_speed)
        OpenAPI.validate_property(Split, Symbol("distance"), distance)
        OpenAPI.validate_property(Split, Symbol("elapsed_time"), elapsed_time)
        OpenAPI.validate_property(Split, Symbol("elevation_difference"), elevation_difference)
        OpenAPI.validate_property(Split, Symbol("pace_zone"), pace_zone)
        OpenAPI.validate_property(Split, Symbol("moving_time"), moving_time)
        OpenAPI.validate_property(Split, Symbol("split"), split)
        return new(average_speed, distance, elapsed_time, elevation_difference, pace_zone, moving_time, split, )
    end
end # type Split

const _property_types_Split = Dict{Symbol,String}(Symbol("average_speed")=>"Float32", Symbol("distance")=>"Float32", Symbol("elapsed_time")=>"Int64", Symbol("elevation_difference")=>"Float32", Symbol("pace_zone")=>"Int64", Symbol("moving_time")=>"Int64", Symbol("split")=>"Int64", )
OpenAPI.property_type(::Type{ Split }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_Split[name]))}

function check_required(o::Split)
    true
end

function OpenAPI.validate_property(::Type{ Split }, name::Symbol, val)
    if name === Symbol("average_speed")
        OpenAPI.validate_param(name, "Split", :format, val, "float")
    end
    if name === Symbol("distance")
        OpenAPI.validate_param(name, "Split", :format, val, "float")
    end
    if name === Symbol("elevation_difference")
        OpenAPI.validate_param(name, "Split", :format, val, "float")
    end
end
