# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""UpdatableActivity

    UpdatableActivity(;
        commute=nothing,
        trainer=nothing,
        hide_from_home=nothing,
        description=nothing,
        name=nothing,
        type=nothing,
        sport_type=nothing,
        gear_id=nothing,
    )

    - commute::Bool : Whether this activity is a commute
    - trainer::Bool : Whether this activity was recorded on a training machine
    - hide_from_home::Bool : Whether this activity is muted
    - description::String : The description of the activity
    - name::String : The name of the activity
    - type::ActivityType
    - sport_type::SportType
    - gear_id::String : Identifier for the gear associated with the activity. ‘none’ clears gear from activity
"""
Base.@kwdef mutable struct UpdatableActivity <: OpenAPI.APIModel
    commute::Union{Nothing, Bool} = nothing
    trainer::Union{Nothing, Bool} = nothing
    hide_from_home::Union{Nothing, Bool} = nothing
    description::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    type = nothing # spec type: Union{ Nothing, ActivityType }
    sport_type = nothing # spec type: Union{ Nothing, SportType }
    gear_id::Union{Nothing, String} = nothing

    function UpdatableActivity(commute, trainer, hide_from_home, description, name, type, sport_type, gear_id, )
        OpenAPI.validate_property(UpdatableActivity, Symbol("commute"), commute)
        OpenAPI.validate_property(UpdatableActivity, Symbol("trainer"), trainer)
        OpenAPI.validate_property(UpdatableActivity, Symbol("hide_from_home"), hide_from_home)
        OpenAPI.validate_property(UpdatableActivity, Symbol("description"), description)
        OpenAPI.validate_property(UpdatableActivity, Symbol("name"), name)
        OpenAPI.validate_property(UpdatableActivity, Symbol("type"), type)
        OpenAPI.validate_property(UpdatableActivity, Symbol("sport_type"), sport_type)
        OpenAPI.validate_property(UpdatableActivity, Symbol("gear_id"), gear_id)
        return new(commute, trainer, hide_from_home, description, name, type, sport_type, gear_id, )
    end
end # type UpdatableActivity

const _property_types_UpdatableActivity = Dict{Symbol,String}(Symbol("commute")=>"Bool", Symbol("trainer")=>"Bool", Symbol("hide_from_home")=>"Bool", Symbol("description")=>"String", Symbol("name")=>"String", Symbol("type")=>"ActivityType", Symbol("sport_type")=>"SportType", Symbol("gear_id")=>"String", )
OpenAPI.property_type(::Type{ UpdatableActivity }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_UpdatableActivity[name]))}

function check_required(o::UpdatableActivity)
    true
end

function OpenAPI.validate_property(::Type{ UpdatableActivity }, name::Symbol, val)
end
