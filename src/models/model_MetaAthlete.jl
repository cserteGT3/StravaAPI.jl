# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""MetaAthlete

    MetaAthlete(;
        id=nothing,
    )

    - id::Int64 : The unique identifier of the athlete
"""
Base.@kwdef mutable struct MetaAthlete <: OpenAPI.APIModel
    id::Union{Nothing, Int64} = nothing

    function MetaAthlete(id, )
        OpenAPI.validate_property(MetaAthlete, Symbol("id"), id)
        return new(id, )
    end
end # type MetaAthlete

const _property_types_MetaAthlete = Dict{Symbol,String}(Symbol("id")=>"Int64", )
OpenAPI.property_type(::Type{ MetaAthlete }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_MetaAthlete[name]))}

function check_required(o::MetaAthlete)
    true
end

function OpenAPI.validate_property(::Type{ MetaAthlete }, name::Symbol, val)

    if name === Symbol("id")
        OpenAPI.validate_param(name, "MetaAthlete", :format, val, "int64")
    end
end
