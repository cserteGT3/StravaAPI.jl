# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ClubAthlete

    ClubAthlete(;
        resource_state=nothing,
        firstname=nothing,
        lastname=nothing,
        member=nothing,
        admin=nothing,
        owner=nothing,
    )

    - resource_state::Int64 : Resource state, indicates level of detail. Possible values: 1 -&gt; \&quot;meta\&quot;, 2 -&gt; \&quot;summary\&quot;, 3 -&gt; \&quot;detail\&quot;
    - firstname::String : The athlete&#39;s first name.
    - lastname::String : The athlete&#39;s last initial.
    - member::String : The athlete&#39;s member status.
    - admin::Bool : Whether the athlete is a club admin.
    - owner::Bool : Whether the athlete is club owner.
"""
Base.@kwdef mutable struct ClubAthlete <: OpenAPI.APIModel
    resource_state::Union{Nothing, Int64} = nothing
    firstname::Union{Nothing, String} = nothing
    lastname::Union{Nothing, String} = nothing
    member::Union{Nothing, String} = nothing
    admin::Union{Nothing, Bool} = nothing
    owner::Union{Nothing, Bool} = nothing

    function ClubAthlete(resource_state, firstname, lastname, member, admin, owner, )
        OpenAPI.validate_property(ClubAthlete, Symbol("resource_state"), resource_state)
        OpenAPI.validate_property(ClubAthlete, Symbol("firstname"), firstname)
        OpenAPI.validate_property(ClubAthlete, Symbol("lastname"), lastname)
        OpenAPI.validate_property(ClubAthlete, Symbol("member"), member)
        OpenAPI.validate_property(ClubAthlete, Symbol("admin"), admin)
        OpenAPI.validate_property(ClubAthlete, Symbol("owner"), owner)
        return new(resource_state, firstname, lastname, member, admin, owner, )
    end
end # type ClubAthlete

const _property_types_ClubAthlete = Dict{Symbol,String}(Symbol("resource_state")=>"Int64", Symbol("firstname")=>"String", Symbol("lastname")=>"String", Symbol("member")=>"String", Symbol("admin")=>"Bool", Symbol("owner")=>"Bool", )
OpenAPI.property_type(::Type{ ClubAthlete }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ClubAthlete[name]))}

function check_required(o::ClubAthlete)
    true
end

function OpenAPI.validate_property(::Type{ ClubAthlete }, name::Symbol, val)






end
