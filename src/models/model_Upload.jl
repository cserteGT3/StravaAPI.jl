# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Upload

    Upload(;
        id=nothing,
        id_str=nothing,
        external_id=nothing,
        error=nothing,
        status=nothing,
        activity_id=nothing,
    )

    - id::Int64 : The unique identifier of the upload
    - id_str::String : The unique identifier of the upload in string format
    - external_id::String : The external identifier of the upload
    - error::String : The error associated with this upload
    - status::String : The status of this upload
    - activity_id::Int64 : The identifier of the activity this upload resulted into
"""
Base.@kwdef mutable struct Upload <: OpenAPI.APIModel
    id::Union{Nothing, Int64} = nothing
    id_str::Union{Nothing, String} = nothing
    external_id::Union{Nothing, String} = nothing
    error::Union{Nothing, String} = nothing
    status::Union{Nothing, String} = nothing
    activity_id::Union{Nothing, Int64} = nothing

    function Upload(id, id_str, external_id, error, status, activity_id, )
        OpenAPI.validate_property(Upload, Symbol("id"), id)
        OpenAPI.validate_property(Upload, Symbol("id_str"), id_str)
        OpenAPI.validate_property(Upload, Symbol("external_id"), external_id)
        OpenAPI.validate_property(Upload, Symbol("error"), error)
        OpenAPI.validate_property(Upload, Symbol("status"), status)
        OpenAPI.validate_property(Upload, Symbol("activity_id"), activity_id)
        return new(id, id_str, external_id, error, status, activity_id, )
    end
end # type Upload

const _property_types_Upload = Dict{Symbol,String}(Symbol("id")=>"Int64", Symbol("id_str")=>"String", Symbol("external_id")=>"String", Symbol("error")=>"String", Symbol("status")=>"String", Symbol("activity_id")=>"Int64", )
OpenAPI.property_type(::Type{ Upload }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_Upload[name]))}

function check_required(o::Upload)
    true
end

function OpenAPI.validate_property(::Type{ Upload }, name::Symbol, val)
    if name === Symbol("id")
        OpenAPI.validate_param(name, "Upload", :format, val, "int64")
    end
    if name === Symbol("activity_id")
        OpenAPI.validate_param(name, "Upload", :format, val, "int64")
    end
end
