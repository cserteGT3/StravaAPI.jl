# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""StreamSet

    StreamSet(;
        time=nothing,
        distance=nothing,
        latlng=nothing,
        altitude=nothing,
        velocity_smooth=nothing,
        heartrate=nothing,
        cadence=nothing,
        watts=nothing,
        temp=nothing,
        moving=nothing,
        grade_smooth=nothing,
    )

    - time::TimeStream
    - distance::DistanceStream
    - latlng::LatLngStream
    - altitude::AltitudeStream
    - velocity_smooth::SmoothVelocityStream
    - heartrate::HeartrateStream
    - cadence::CadenceStream
    - watts::PowerStream
    - temp::TemperatureStream
    - moving::MovingStream
    - grade_smooth::SmoothGradeStream
"""
Base.@kwdef mutable struct StreamSet <: OpenAPI.APIModel
    time = nothing # spec type: Union{ Nothing, TimeStream }
    distance = nothing # spec type: Union{ Nothing, DistanceStream }
    latlng = nothing # spec type: Union{ Nothing, LatLngStream }
    altitude = nothing # spec type: Union{ Nothing, AltitudeStream }
    velocity_smooth = nothing # spec type: Union{ Nothing, SmoothVelocityStream }
    heartrate = nothing # spec type: Union{ Nothing, HeartrateStream }
    cadence = nothing # spec type: Union{ Nothing, CadenceStream }
    watts = nothing # spec type: Union{ Nothing, PowerStream }
    temp = nothing # spec type: Union{ Nothing, TemperatureStream }
    moving = nothing # spec type: Union{ Nothing, MovingStream }
    grade_smooth = nothing # spec type: Union{ Nothing, SmoothGradeStream }

    function StreamSet(time, distance, latlng, altitude, velocity_smooth, heartrate, cadence, watts, temp, moving, grade_smooth, )
        OpenAPI.validate_property(StreamSet, Symbol("time"), time)
        OpenAPI.validate_property(StreamSet, Symbol("distance"), distance)
        OpenAPI.validate_property(StreamSet, Symbol("latlng"), latlng)
        OpenAPI.validate_property(StreamSet, Symbol("altitude"), altitude)
        OpenAPI.validate_property(StreamSet, Symbol("velocity_smooth"), velocity_smooth)
        OpenAPI.validate_property(StreamSet, Symbol("heartrate"), heartrate)
        OpenAPI.validate_property(StreamSet, Symbol("cadence"), cadence)
        OpenAPI.validate_property(StreamSet, Symbol("watts"), watts)
        OpenAPI.validate_property(StreamSet, Symbol("temp"), temp)
        OpenAPI.validate_property(StreamSet, Symbol("moving"), moving)
        OpenAPI.validate_property(StreamSet, Symbol("grade_smooth"), grade_smooth)
        return new(time, distance, latlng, altitude, velocity_smooth, heartrate, cadence, watts, temp, moving, grade_smooth, )
    end
end # type StreamSet

const _property_types_StreamSet = Dict{Symbol,String}(Symbol("time")=>"TimeStream", Symbol("distance")=>"DistanceStream", Symbol("latlng")=>"LatLngStream", Symbol("altitude")=>"AltitudeStream", Symbol("velocity_smooth")=>"SmoothVelocityStream", Symbol("heartrate")=>"HeartrateStream", Symbol("cadence")=>"CadenceStream", Symbol("watts")=>"PowerStream", Symbol("temp")=>"TemperatureStream", Symbol("moving")=>"MovingStream", Symbol("grade_smooth")=>"SmoothGradeStream", )
OpenAPI.property_type(::Type{ StreamSet }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_StreamSet[name]))}

function check_required(o::StreamSet)
    true
end

function OpenAPI.validate_property(::Type{ StreamSet }, name::Symbol, val)
end
